#!/usr/bin/env ruby
# frozen_string_literal: true

# code: language=ruby

class Args
  attr_reader :branch

  def self.instance
    @instance ||= new(ARGV).tap(&:parse!)
  end

  def self.branch = instance.branch

  def initialize(argv)
    @argv = argv.dup
  end

  def parse!
    until @argv.empty?
      case (arg = @argv.shift)
      when '--branch'
        @branch = @argv.shift
      else
        raise "Unexpected arg #{arg}"
      end
    end
  end
end

class PullRequest
  def create!
    usage('Must be called with a branch (not main) checked out') if branch == 'main'

    system command
  end

  def usage(*messages)
    puts 'Usage: create-pr'

    messages.each do |message|
      print ' - '
      puts message
    end

    exit(-1)
  end

  private

  def command
    "open #{remote}/compare/#{branch}"
  end

  def remote
    non_git_url.split.drop(1).first
  end

  def non_git_url
    push_target
      .gsub('.git', '')
      .gsub('ssh://', 'https://')
      .gsub('http://', 'https://')
  end

  def push_target
    `git remote -v`.lines.find { |line| line.include?('push') }
  end

  def branch
    return Args.branch if Args.branch
    return branch_output if branch_output

    raise 'Unknown branch'
  end

  def branch_output
    @branch_output ||= `git branch --show-current`.chomp

    return unless @branch_output&.size&.> 0

    @branch_output
  end
end

PullRequest.new.create!
