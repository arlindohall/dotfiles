#!/Users/millerhall/.asdf/installs/ruby/3.4.3/bin/ruby
# typed: false
# frozen_string_literal: true

class Args
  class << self
    def instance
      @instance ||= new.tap(&:parse_args!)
    end

    def files_args = instance.files_args
    def dev_args = instance.dev_args
    def print? = instance.print?
  end

  attr_reader :files_args, :dev_args

  def initialize
    @print = false
    @files_args = []
    @dev_args = []
  end

  def print? = @print

  def parse_args!
    args = ARGV.dup
    while (arg = args.shift)
      case arg
      when '--'
        @dev_args = args
        args = []
      when '--print', '-p'
        @print = true
      else
        @files_args << arg
      end
    end
  end
end

class TxtFailedTests
  FAILED_FILE = 'miller/failed'

  def self.call
    new.call
  end

  def call
    if Args.print?
      puts test_name_and_line.join(' ')
    else
      dev "test #{test_name_and_line.join(' ')} #{Args.dev_args.join(' ')}"
    end
  end

  def dev(cmd)
    warn "dev #{cmd}"
    system "dev #{cmd}"
  end

  def test_name_and_line
    files = if Args.files_args.empty?
              [FAILED_FILE]
            else
              Args.files_args
            end

    content = String.new
    files.each { |name| content << File.read(name) }

    @test_name_and_line ||= content.scan(/(?<=\[)\S*?_test.rb:\d+(?=\])|component\S*?_test.rb:\d+(?=:in)|test\S*?_test.rb:\d+(?=:in)/)
  end
end

TxtFailedTests.call
