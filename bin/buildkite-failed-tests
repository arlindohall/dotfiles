#!/usr/bin/env ruby
# frozen_string_literal: true
# typed: true

require 'nokogiri'

class BuildkiteFailedTests
  class AppStore
    attr_reader :html

    def initialize(html)
      @html = html
    end

    def type = 'app-store'
    def matches? = html.at('title').text.match('shopify-app-store')

    def failed_tests
      html.search('p:contains("Run locally")')
          .map { |it| it.children.last.children.first.to_s.split(' -n').first.split('lib:test ').last }
    end
  end

  class ThemeStore
    attr_reader :html

    def initialize(html)
      @html = html
    end

    def type = 'theme-store'
    def matches? = html.at('title').text.match('shopify-theme-store')

    def failed_tests
      html.search('p:contains("Run locally")')
          .map { |it| it.children.last.children.first.to_s.split(' -n').first.split('lib:test ').last }
    end
  end

  class AdminWeb
    attr_reader :html

    def initialize(html)
      @html = html
    end

    def type = 'admin-web'
    def matches? = true

    def failed_tests
      html.search('strong:contains("Test failure")')
          .map { |it| it.parent.at('code').children.to_s.split('#').first }
    end
  end

  class ShopifyCore
    attr_reader :html

    def initialize(html)
      @html = html
    end

    def type = 'shopify-core'
    def matches? = html.at('title').text.match(/^world-shopify/)

    def failed_tests
      html.search('p:contains("Run locally")')
          .map { |it| it.children.last.children.first.to_s.split(' -n').first.split.last }
    end
  end

  FAILED_FILE = '/tmp/failed.html'

  MESSAGES = {
    (NO_FAILURES_FOUND = 1) => "No failures in file #{FAILED_FILE}",
    (INVALID_SINGLE_QUOTES = 2) => 'Invalid args with single quotes: (REPLACE)',
    (UNDETERMINED_TEST_FINDER = 3) => 'Unable to determine test finder class'
  }.freeze

  TEST_FINDERS = [ShopifyCore, AppStore, ThemeStore, AdminWeb].freeze

  attr_reader :contents

  def self.call
    File.open(FAILED_FILE, 'r') do |file|
      new(file.read).call
    end
  end

  def initialize(contents)
    @contents = contents
  end

  def call
    fatal NO_FAILURES_FOUND if failed.empty?
    fatal UNDETERMINED_TEST_FINDER if test_finder.nil?

    if ARGV.include?('--print')
      puts failed.join(' ')
    else
      warn "Running test, found type #{test_finder.type}"
      dev "test #{failed.join(' ')} #{ARGV.join(' ')}"
    end
  end

  def html
    Nokogiri::HTML(contents)
  end

  def test_finder
    TEST_FINDERS.map { |it| it.new(html) }.find(&:matches?)
  end

  def failed
    test_finder.failed_tests.uniq
  end

  def dev(args)
    if args.include?("'")
      warn 'Bug: unable to handle single quotes'
      fatal INVALID_SINGLE_QUOTES, args
    end

    warn "dev #{args}"
    system "bash -c '. /opt/dev/dev.sh; dev #{args}'"
  end

  def fatal(code, replacement = '')
    warn MESSAGES[code].gsub('REPLACE', replacement)
    exit code
  end
end

BuildkiteFailedTests.call
