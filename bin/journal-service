#!/usr/bin/env ruby

require_relative "lib/helpers"

class JournalService
  def self.call = new(ARGV).call

  def initialize(argv)
    @argv = argv
  end

  def call
    if has_journalfmt?
      command("journalctl -f --output=json #{additional_args} --unit=#{service_name} | #{journalfmt}")
    else
      command("journalctl -f #{additional_args} #{service_name}")
    end
  end

  # private

  def command(cmd)
    debug("-- Running command: #{cmd}")
    system(cmd)
  end

  def command_output(cmd)
    debug("-- Running command (capturing output): #{cmd}")
    `#{cmd}`
  end

  def service_name
    return default_service_name unless first_arg_is_service?
    return default_service_name unless name_found?

    "proc-shopify--#{input_name}@server.service"
  end

  def name_found?
    input_name && matching_names.any?
  end

  def matching_names
    command_output("systemctl status \"*#{input_name}*\"")
      .split("\n")
      .filter { |line| line.match("‚óè")}
  end

  def input_name
    @argv.first if first_arg_is_service?
  end

  def default_service_name
    debug("Unable to determine service name, tailing 'shopify'")
    "proc-shopify--shopify@server.service"
  end

  def additional_args
    first_arg_is_service? ? @argv.drop(1).join(" ") : @argv
  end

  def first_arg_is_service?
    @argv.first && !@argv.first.start_with?("-")
  end

  def has_journalfmt?
    command("ls #{journalfmt}")
  end

  def journalfmt
    "/opt/spin/bin/journalfmt"
  end
end

JournalService.call
