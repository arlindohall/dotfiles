#!/usr/bin/env ruby
# frozen_string_literal: true

log_output = `git log --pretty=format:"%h %p %s" #{ARGV.join(' ')}`
branch_output = `git branch --all`
commits = <GET_COMMITS_HERE>

branches = branch_output.split("\n").map { |line| line.strip.sub('* ', '') }

graphviz = String.new
graphviz << "digraph git {\n"
graphviz << "  rankdir=TB;\n"
graphviz << "  node [shape=rect];\n" # Nodes are rectangles

log_output.each_line do |line|
  commit_hash, parent_hashes, commit_message = line.split(' ', 3)

  graphviz << "  \"#{commit_hash}\" [label=\"#{commit_hash}\\n#{commit_message.chomp}\"];\n"

  next if parent_hashes.empty?

  parent_hashes.split.each do |parent_hash|
    graphviz << "  \"#{parent_hash}\" -> \"#{commit_hash}\";\n"
  end
end

branches.each do |branch|
  commit_hash = `git rev-parse --short #{branch}`.strip
  if branch.include?('origin')
    graphviz << "  node [shape=ellipse color=red];\n"
    graphviz << "  \"#{commit_hash}\" -> \"#{branch}\" [style=dotted, color=red];\n"
  else
    graphviz << "  node [shape=ellipse color=blue];\n"
    graphviz << "  \"#{commit_hash}\" -> \"#{branch}\" [style=dotted, color=blue];\n"
  end
end

graphviz << "}\n"
puts graphviz
